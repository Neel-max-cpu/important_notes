

1st - roles
(id, role_name[admin/client])

2nd - users
(id, name, email, password[hashed], role_id{1st}(by default - 2), createdOn[automatic])

3rd - password_mapping
(id, email, password[unhashed], createdOn, last_modified]

4th - forget_password_log
(id, user_id{2nd}, user_name{2nd} email, otp[autogenerated], is_active[y/n], created_on)

5th - flight_class
(id, fligh_class_name[buisness, 1st class, economy, premium_economy, suit])

6th - flight
(id, user_id{2nd}, user_email{2nd}, from_date, to_date, sent_mail_confimation[y/n], createdOn[automatic], flight_no, flight_name, return_fligh[y/n], return_from_date, return_to_date, flight_class_id{5th}, 
number_of_passengers_booked)

7th - hotel_type
(id, room_type[single, double, triple, quadraple, sharing, premium, suite, kingsuite], number_of_beds)

8th - hotels
(id, user_id{2nd}, user_email{2nd}, from_date, to_date, send_mail_confirmation[y/n], createdOn[automatic], includes_breakfast, includes_lunch, include_dinner, hotel_name, city, country, pin_number, number_of_beds,
hotel_type_id{7th});

9th - payment_hotel
(id[1/2], name[offline/online])

10th - 
hotel_booking_verification online/offline
(id, user_id{2nd}, user_email{2nd}, hotel_id{8th}, type[online/offline], payment_hotel_id{9th}[1/2])

11th - transaction
(id, user_id{2nd}, user_email{2nd}, flight_id{6th}, hotel_id{8th} hotel_booking_verification_id{10th}); 


12th for admin - userVsHotelsVsFlights
(id, user_id, transaction_id{11th})



flight booking - from(airport name) to(airport name), departure_date, return_date(optional), adults, children(optional), infants(optional), class( Economy / Premium Economy / Business / First) , non-stop(toggle)

hotel booking - location(city), check-in-date, check-out-date, adults, rooms, includes breakfast[toggle], max_price[slider], rating(optional)

USE sql12789820;
CREATE TABLE roles(
id INT PRIMARY KEY AUTO_INCREMENT,
role_name VARCHAR(20) UNIQUE NOT NULL
);

CREATE TABLE users(
id INT PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(50) NOT NULL,
email VARCHAR(50) NOT NULL,
password VARCHAR(100) NOT NULL,
role_id INT,
created_on TIMESTAMP,
FOREIGN KEY (role_id) REFERENCES roles(id)
);

ALTER TABLE users MODIFY COLUMN password VARCHAR(100) NOT NULL;
ALTER TABLE users MODIFY COLUMN created_on DATETIME;

CREATE TABLE password_mapping(
id INT PRIMARY KEY AUTO_INCREMENT,
user_id INT,
password VARCHAR(100) NOT NULL,
created_on TIMESTAMP,
last_modified TIMESTAMP,
FOREIGN KEY (user_id) REFERENCES users(id)
);

ALTER TABLE password_mapping MODIFY COLUMN created_on DATETIME;
ALTER TABLE password_mapping MODIFY COLUMN last_modified DATETIME;

CREATE TABLE forget_password_log(
id INT PRIMARY KEY AUTO_INCREMENT,
user_id INT,
user_name VARCHAR(50),
email VARCHAR(50),
otp VARCHAR(6),
is_active BOOLEAN,
created_on TIMESTAMP,
FOREIGN KEY (user_id) REFERENCES users(id)
);
 
ALTER TABLE forget_password_log MODIFY COLUMN created_on DATETIME;


CREATE TABLE flight_class(
id INT PRIMARY KEY AUTO_INCREMENT,
flight_class_name VARCHAR(30)
);

CREATE TABLE flight(
id INT PRIMARY KEY AUTO_INCREMENT,
user_id INT,
user_email VARCHAR(50),
origin VARCHAR(5),
destination VARCHAR(5),
departure_date DATE,
departure_time TIME,
return_date DATE,
return_time TIME,
flight_number VARCHAR(20),
airline_name VARCHAR(100),
travel_class_id INT,
number_of_passengers INT,
total_price DECIMAL(10,2),
currency VARCHAR(5),
send_mail_confirmation BOOLEAN,
created_on DATETIME,
FOREIGN KEY (user_id) REFERENCES users(id),
FOREIGN KEY (travel_class_id) REFERENCES flight_class(id)
);

CREATE TABLE hotel_type(
id INT PRIMARY KEY AUTO_INCREMENT,
room_type VARCHAR(50),
number_of_beds INT
);

CREATE TABLE hotels(
id INT PRIMARY KEY AUTO_INCREMENT,
user_id INT,
user_email VARCHAR(50),

hotel_id_code VARCHAR(50),
chain_code VARCHAR(10),
offer_id VARCHAR(20),

hotel_name VARCHAR(255),
city VARCHAR(100),
country VARCHAR(100),

from_date DATE,
to_date DATE,
send_mail_confirmation BOOLEAN,
created_on DATETIME,

includes_breakfast BOOLEAN,
includes_lunch BOOLEAN,
includes_dinner BOOLEAN,

number_of_beds INT,
hotel_type_id INT,

price_total DECIMAL(10,2),
currency VARCHAR(5),

FOREIGN KEY (user_id) REFERENCES users(id),
FOREIGN KEY (hotel_type_id) REFERENCES hotel_type(id)
);

CREATE TABLE payment_hotel(
id INT PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(20)
);

CREATE TABLE hotel_booking_verification(
id INT PRIMARY KEY AUTO_INCREMENT,
user_id INT,
user_email VARCHAR(50),
hotel_id INT,
type VARCHAR(20),
payment_hotel_id INT,
FOREIGN KEY (user_id) REFERENCES users(id),
FOREIGN KEY (hotel_id) REFERENCES hotels(id),
FOREIGN KEY (payment_hotel_id) REFERENCES payment_hotel(id)
);

CREATE TABLE transactions (
id INT PRIMARY KEY AUTO_INCREMENT,
user_id INT,
user_email VARCHAR(50),
flight_id INT,
hotel_id INT,
hotel_booking_verification_id INT,
total_price DECIMAL(10,2),
currency VARCHAR(5),
created_on DATETIME,
FOREIGN KEY (user_id) REFERENCES users(id),
FOREIGN KEY (flight_id) REFERENCES flight(id),
FOREIGN KEY (hotel_id) REFERENCES hotels(id),
FOREIGN KEY (hotel_booking_verification_id) REFERENCES hotel_booking_verification(id)
);

CREATE TABLE users_vs_hotels_vs_flight(
id INT PRIMARY KEY AUTO_INCREMENT,
user_id INT,
transaction_id INT,
FOREIGN KEY (user_id) REFERENCES users(id),
FOREIGN KEY (transaction_id) REFERENCES transactions(id)
);

so this is my final table



